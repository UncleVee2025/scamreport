"use client"

import { useCallback, useState } from "react"
import { SimilarScams } from "@/components/similar-scams"
import { EnhancedCommentForm } from "@/components/enhanced-comment-form"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Lightbulb, Share2, ShieldAlert, Sparkles } from "lucide-react"
import { toast } from "@/components/ui/use-toast"

interface ScamDetailEnhancementsProps {
  scamId: number
  scamType: string
  scamDescription: string
  onCommentAdded: (comment: any) => void
}

export function ScamDetailEnhancements({
  scamId,
  scamType,
  scamDescription,
  onCommentAdded,
}: ScamDetailEnhancementsProps) {
  const [safetyTips, setSafetyTips] = useState<string | null>(null)
  const [isLoadingTips, setIsLoadingTips] = useState(false)

  const generateSafetyTips = useCallback(async () => {
    try {
      setIsLoadingTips(true)

      const response = await fetch("/api/ai/classify-scam", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ description: scamDescription }),
      })

      const data = await response.json()

      if (!data.success) {
        throw new Error(data.message)
      }

      setSafetyTips(data.data.safetyTips)
    } catch (error) {
      console.error("Error generating safety tips:", error)
      toast({
        title: "Error",
        description: "Failed to generate safety tips",
        variant: "destructive",
      })
    } finally {
      setIsLoadingTips(false)
    }
  }, [scamDescription])

  const handleShare = useCallback(() => {
    if (navigator.share) {
      navigator.share({
        title: "ScamReport: Stay Safe from Scams",
        text: "Check out this AI-powered scam detection app to stay safe from scams!",
        url: window.location.href,
      })
    } else {
      navigator.clipboard.writeText(window.location.href)
      toast({
        title: "Link copied",
        description: "The link has been copied to your clipboard",
      })
    }
  }, [])

  return (
    <div className="space-y-6">
      {/* AI-Generated Safety Tips */}
      <Card>
        <CardHeader className="pb-3">
          <CardTitle className="flex items-center justify-between">
            <div className="flex items-center gap-2">
              <ShieldAlert className="h-5 w-5 text-primary" />
              <span>AI Safety Tips</span>
            </div>
            <Badge className="bg-blue-500 hover:bg-blue-600 text-white text-xs">AI-Powered</Badge>
          </CardTitle>
        </CardHeader>
        <CardContent>
          {safetyTips ? (
            <div className="space-y-2">
              <div className="prose" dangerouslySetInnerHTML={{ __html: safetyTips.replace(/\n/g, "<br />") }} />

              <div className="text-xs text-gray-500 mt-4 flex items-center gap-1">
                <Sparkles className="h-3 w-3" />
                <span>Generated by AI based on analysis of this scam report</span>
              </div>
            </div>
          ) : (
            <div className="text-center py-4">
              <Lightbulb className="h-8 w-8 text-amber-400 mx-auto mb-3" />
              <p className="text-gray-600 mb-4">Get personalized safety tips to protect yourself from similar scams</p>
              <Button onClick={generateSafetyTips} disabled={isLoadingTips} className="bg-primary hover:bg-primary/90">
                {isLoadingTips ? (
                  <>
                    <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                    Generating...
                  </>
                ) : (
                  <>
                    <Sparkles className="h-4 w-4 mr-2" />
                    Generate Safety Tips
                  </>
                )}
              </Button>
            </div>
          )}
        </CardContent>
      </Card>

      {/* Enhanced Comment Form with AI moderation */}
      <div className="space-y-3">
        <h3 className="text-lg font-medium">Add Your Comment</h3>
        <EnhancedCommentForm scamId={scamId} onCommentAdded={onCommentAdded} />
      </div>

      {/* Similar Scams */}
      <SimilarScams scamId={scamId} />

      {/* Share Card */}
      <Card>
        <CardContent className="p-4">
          <div className="flex flex-col sm:flex-row items-center justify-between gap-4">
            <div>
              <h3 className="font-medium">Help others stay safe</h3>
              <p className="text-sm text-gray-500">Share this app to help others avoid scams</p>
            </div>
            <Button onClick={handleShare} className="gap-2">
              <Share2 className="h-4 w-4" />
              Share App
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
